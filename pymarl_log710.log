python pymarl/main.py --config=qmix --env-config=codertask with mixer=qmix
[DEBUG 15:27:24] git.cmd Popen(['git', 'version'], cwd=D:\code\python\pymarl3\pymarl3, stdin=None, shell=False, universal_newlines=False)
[DEBUG 15:27:24] git.cmd Popen(['git', 'version'], cwd=D:\code\python\pymarl3\pymarl3, stdin=None, shell=False, universal_newlines=False)
[DEBUG 15:27:24] git.cmd Popen(['git', 'diff', '--cached', '--abbrev=40', '--full-index', '--raw'], cwd=D:\code\python\pymarl3\pymarl3, stdin=None, shell=False, universal_newlines=False)
[DEBUG 15:27:24] git.cmd Popen(['git', 'diff', '--abbrev=40', '--full-index', '--raw'], cwd=D:\code\python\pymarl3\pymarl3, stdin=None, shell=False, universal_newlines=False)
[DEBUG 15:27:24] git.cmd Popen(['git', 'cat-file', '--batch-check'], cwd=D:\code\python\pymarl3\pymarl3, stdin=<valid stream>, shell=False, universal_newlines=False)
[DEBUG 15:27:24] git.cmd Popen(['git', 'diff', '--cached', '--abbrev=40', '--full-index', '--raw'], cwd=D:\code\python\pymarl3\pymarl3, stdin=None, shell=False, universal_newlines=False)
[DEBUG 15:27:24] git.cmd Popen(['git', 'diff', '--abbrev=40', '--full-index', '--raw'], cwd=D:\code\python\pymarl3\pymarl3, stdin=None, shell=False, universal_newlines=False)
[DEBUG 15:27:24] git.cmd Popen(['git', 'cat-file', '--batch-check'], cwd=D:\code\python\pymarl3\pymarl3, stdin=<valid stream>, shell=False, universal_newlines=False)
[INFO 15:27:24] root Saving to FileStorageObserver in D:\code\python\pymarl3\pymarl3\results\sacred\qmix.
[DEBUG 15:27:26] pymarl Using capture mode "fd"
Supported environments: {'sc2': functools.partial(<function env_fn at 0x00000206B93A0AE0>, env=<class 'envs.smac_v1.StarCraft2EnvWrapper.StarCraft2EnvWrapper'>), 'sc2_v2': functools.partial(<function env_fn at 0x00000206B93A0AE0>, env=<class 'envs.smac_v2.StarCraft2Env2Wrapper.StarCraft2Env2Wrapper'>), 'codertask': functools.partial(<function env_fn at 0x00000206B93A0AE0>, env=<class 'envs.codertask.codertask.CodertaskEnv'>)}
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\site-packages\sacred\pytee.py", line 9, in <module>
    buffer = sys.stdin.read()
             ^^^^^^^^^^^^^^^^
KeyboardInterrupt
[DEBUG 15:41:51] pymarl Stopping Heartbeat
[WARNING 15:41:51] pymarl Aborted after 0:14:25!
Traceback (most recent call last):
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\site-packages\sacred\stdout_capturing.py", line 164, in tee_output_fd
    yield out  # let the caller do their printing
    ^^^^^^^^^
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\site-packages\sacred\run.py", line 238, in __call__
    self.result = self.main_function(*args)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\site-packages\sacred\config\captured_function.py", line 42, in captured_function
    result = wrapped(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\code\python\pymarl3\pymarl3\src\main.py", line 44, in my_main
    run_REGISTRY[_config['run']](_run, config, _log)
  File "D:\code\python\pymarl3\pymarl3\src\run\run.py", line 128, in run
    run_sequential(args=args, logger=logger)
  File "D:\code\python\pymarl3\pymarl3\src\run\run.py", line 264, in run_sequential
    episode_batch = runner.run(test_mode=False)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\code\python\pymarl3\pymarl3\src\runners\parallel_runner.py", line 162, in run
    data = parent_conn.recv()
           ^^^^^^^^^^^^^^^^^^
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\multiprocessing\connection.py", line 250, in recv
    buf = self._recv_bytes()
          ^^^^^^^^^^^^^^^^^^
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\multiprocessing\connection.py", line 321, in _recv_bytes
    waitres = _winapi.WaitForMultipleObjects(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\code\python\pymarl3\pymarl3\src\main.py", line 123, in <module>
    ex.run_commandline(params)
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\site-packages\sacred\experiment.py", line 312, in run_commandline
    return self.run(
           ^^^^^^^^^
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\site-packages\sacred\experiment.py", line 276, in run
    run()
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\site-packages\sacred\run.py", line 234, in __call__
    with capture_stdout() as self._output_file:
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\site-packages\sacred\stdout_capturing.py", line 177, in tee_output_fd
    tee_stdout.wait(timeout=1)
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\subprocess.py", line 1264, in wait
    return self._wait(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Dev_environment\miniconda\envs\pymarl\Lib\subprocess.py", line 1590, in _wait
    result = _winapi.WaitForSingleObject(self._handle,
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
^CTraceback (most recent call last):
  File "D:\code\python\pymarl3\pymarl3\experiments.py", line 71, in <module>
    run_cmd(build_cmd(env, config, params))
  File "D:\code\python\pymarl3\pymarl3\experiments.py", line 47, in run_cmd
    os.system(cmd)
KeyboardInterrupt
^C